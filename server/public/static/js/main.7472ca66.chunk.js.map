{"version":3,"sources":["components/SchoolList.tsx","components/Navigation.tsx","components/Login.tsx","components/Register.tsx","components/Profile.tsx","components/Application.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getSchoolsQuery","gql","useStyles","makeStyles","theme","createStyles","card","minWidth","maxWidth","margin","boxShadow","shadows","root","flexGrow","avatar","width","spacing","height","color","palette","getContrastText","lightGreen","backgroundColor","fontSize","marginLeft","marginRight","blue","lightBlue","description","marginTop","SchoolList","useQuery","loading","error","data","classes","message","Grid","container","className","item","xs","justify","getSchools","map","school","key","id","Card","CardContent","Avatar","acronym","Typography","variant","align","gutterBottom","name","Date","startDate","toLocaleDateString","endDate","component","CardActions","Button","Link","to","size","menuButton","title","link","Navigation","user","setUser","resetStore","loggedIn","undefined","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","role","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","localStorage","removeItem","Copyright","getFullYear","paper","display","flexDirection","alignItems","secondary","main","form","submit","loginMutation","Login","history","goBack","setError","email","setEmail","password","setPassword","useMutation","loginUser","a","preventDefault","variables","input","errors","join","newUser","setItem","JSON","stringify","toString","Container","elevation","severity","CssBaseline","noValidate","onSubmit","TextField","required","fullWidth","label","autoComplete","autoFocus","value","onChange","e","target","type","FormControlLabel","control","Checkbox","disabled","length","Box","mt","registerMutation","Register","firstName","setFirstName","lastName","setLastName","registerUser","includes","userQuery","textField","errorMessage","Profile","getUser","console","log","CircularProgress","defaultValue","fullName","getSchoolQuery","createApplicationMutation","Application","useParams","formError","setFormError","applicationId","setApplicationId","questions","answers","setAnswers","createApplication","inputValidated","every","answer","schoolId","Number","userId","createSchoolApplication","getSchoolInfoForApplication","question","multiline","find","questionId","answ","filter","setAnswer","storageUser","getItem","storedUser","parse","token","client","ApolloClient","uri","headers","onError","graphQLErrors","operation","networkError","forward","err","extensions","code","getContext","setContext","logout","browserHistory","createBrowserHistory","createMuiTheme","primary","blueGrey","grey","App","ThemeProvider","exact","from","path","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7472ca66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo\";\r\n// import { Card, Elevation } from \"@blueprintjs/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\n// import CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { lightGreen, lightBlue } from \"@material-ui/core/colors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst getSchoolsQuery = gql`\r\n  query getSchools {\r\n    getSchools {\r\n      id\r\n      name\r\n      description\r\n      startDate\r\n      endDate\r\n      acronym\r\n      schoolEmail\r\n      outreachStartDate\r\n      outreachEndDate\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    card: {\r\n      minWidth: 375,\r\n      maxWidth: 450,\r\n      margin: 30,\r\n      boxShadow: theme.shadows[3],\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    avatar: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n      color: theme.palette.getContrastText(lightGreen[500]),\r\n      backgroundColor: lightGreen[500],\r\n      fontSize: 32,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    lightGreen: {\r\n      color: theme.palette.getContrastText(lightGreen[500]),\r\n      backgroundColor: lightGreen[500],\r\n    },\r\n    blue: {\r\n      color: theme.palette.getContrastText(lightBlue[500]),\r\n      backgroundColor: lightBlue[500],\r\n    },\r\n    description: {\r\n      marginTop: 12,\r\n    },\r\n  })\r\n);\r\n\r\n// get generated types from server to use in client\r\n\r\nexport function SchoolList() {\r\n  const { loading, error, data } = useQuery(getSchoolsQuery);\r\n  const classes = useStyles();\r\n\r\n  if (loading) {\r\n    return <div>Schools Loading</div>;\r\n  }\r\n  if (error) return <span>Error! ${error.message}</span>;\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={1}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={1}>\r\n          {data.getSchools.map(\r\n            (school: {\r\n              id: number;\r\n              name: string;\r\n              acronym: string;\r\n              description: string;\r\n              startDate: string;\r\n              endDate: string;\r\n            }) => (\r\n              // <Card interactive={true} elevation={Elevation.TWO}>\r\n              <Grid key={school.id} item>\r\n                <Card className={classes.card}>\r\n                  <CardContent>\r\n                    <Avatar\r\n                      className={`${classes.avatar} ${\r\n                        school.acronym === \"dts\"\r\n                          ? classes.lightGreen\r\n                          : classes.blue\r\n                      }`}\r\n                    >\r\n                      {school.acronym}\r\n                    </Avatar>\r\n                    <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n                      {school.name}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" align=\"center\">\r\n                      {new Date(school.startDate).toLocaleDateString()} -\r\n                      {\" \" + new Date(school.endDate).toLocaleDateString()}\r\n                    </Typography>\r\n                    <div className={classes.description}>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        {school.description}\r\n                      </Typography>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      component={Link}\r\n                      to={\"/school/\" + school.id + \"/apply\"}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Apply\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            )\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Button } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { User } from '../types/User';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    link: {\n      margin: theme.spacing(1, 1.5),\n    },\n  }),\n);\n\n// interface drawer {\n//   route: String;\n//   items: drawerItem[];\n// }\n\n// interface drawerItem {\n//   icon: String;\n//   path: String;\n//   label: String;\n// }\n\n// const drawerItems: drawer[] = [\n//   {\n//     route: \"profile\",\n//     items: [\n//       {\n//         icon: \"contacts\",\n//         path: \"/profile/contact\",\n//         label: \"Contact Information\",\n//       },\n//     ],\n//   },\n// ];\n\nexport default function Navigation({\n  user,\n  setUser,\n  resetStore,\n}: {\n  user: User | undefined;\n  setUser: React.Dispatch<React.SetStateAction<User | undefined>>;\n  resetStore: () => void;\n}): React.ReactElement {\n  // const location = useLocation();\n  const classes = useStyles();\n  const loggedIn = user !== undefined;\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  function logout() {\n    handleClose();\n    localStorage.removeItem('user');\n    setUser(undefined);\n    resetStore();\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            School Application\n          </Typography>\n          <nav>\n            <Button component={Link} to=\"/home\" color=\"inherit\" className={classes.link}>\n              Home\n            </Button>\n            {user && user?.role === 'ADMIN' && (\n              <Button component={Link} color=\"inherit\" to=\"/admin\" className={classes.link}>\n                Admin\n              </Button>\n            )}\n          </nav>\n\n          {loggedIn ? (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem component={Link} to=\"/profile\" onClick={handleClose}>\n                  Profile\n                </MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <MenuItem onClick={logout}>Logout</MenuItem>\n              </Menu>\n            </div>\n          ) : (\n            <span>\n              <Button component={Link} color=\"inherit\" to=\"/login\">\n                Login\n              </Button>\n              <Button component={Link} color=\"inherit\" to=\"/register\">\n                Signup\n              </Button>\n            </span>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n// <Navbar>\n//       <Navbar.Group align={Alignment.LEFT}>\n//         <Navbar.Heading>School Application</Navbar.Heading>\n//         <Navbar.Divider />\n//         <AnchorButton\n//           href=\"/home\"\n//           className=\"bp3-minimal\"\n//           icon=\"home\"\n//           text=\"Home\"\n//         />\n//         <AnchorButton\n//           href=\"/schools\"\n//           className=\"bp3-minimal\"\n//           icon=\"document\"\n//           text=\"Schools\"\n//         />\n//       </Navbar.Group>\n//     </Navbar>\n","import React, { useState, Dispatch } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from 'react-apollo';\nimport { History } from 'history';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { loginUser, loginUserVariables } from '../graphql/loginUser';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { User } from '../types/User';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst loginMutation = gql`\n  mutation loginUser($input: InputLogin!) {\n    loginUser(input: $input) {\n      id\n      firstName\n      token\n      role\n    }\n  }\n`;\n\nexport default function Login({\n  user,\n  setUser,\n  history,\n}: {\n  user: User | undefined;\n  setUser: Dispatch<React.SetStateAction<User | undefined>>;\n  history: History<History.PoorMansUnknown>;\n}) {\n  if (user) {\n    history.goBack();\n  }\n  const classes = useStyles();\n  const [error, setError] = useState<string | undefined>(undefined);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  const [loginUser] = useMutation<loginUser, loginUserVariables>(loginMutation);\n\n  async function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    try {\n      const user = await loginUser({\n        variables: { input: { email: email, password: password } },\n      });\n      if (user.errors) {\n        setError(user.errors.join(','));\n      }\n      if (user.data === undefined) {\n        setError('no user data arrived from server.');\n      } else {\n        const newUser: User = {\n          ...user.data.loginUser,\n        };\n        localStorage.setItem('user', JSON.stringify(newUser));\n        setUser(newUser);\n      }\n    } catch (e) {\n      setError(e.toString());\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {error && (\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          {error}\n        </MuiAlert>\n      )}\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\" />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={!validateForm()}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"#\">Forgot password?</Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, Dispatch } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from 'react-apollo';\nimport { History } from 'history';\nimport { User } from '../types/User';\nimport { registerUserVariables, registerUser_registerUser } from '../graphql/registerUser';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Copyright(): React.ReactElement {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst registerMutation = gql`\n  mutation registerUser($input: InputRegisterUser!) {\n    registerUser(input: $input) {\n      id\n      token\n      firstName\n      role\n    }\n  }\n`;\n\nexport default function Register({\n  user,\n  setUser,\n  history,\n}: {\n  user: User | undefined;\n  setUser: Dispatch<React.SetStateAction<User | undefined>>;\n  history: History<History.PoorMansUnknown>;\n}): React.ReactElement {\n  if (user) {\n    history.goBack();\n  }\n  const classes = useStyles();\n  const [error, setError] = useState<string | undefined>(undefined);\n\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [password, setPassword] = useState('');\n\n  function validateForm(): boolean {\n    return email.length > 0 && password.length > 0 && email.includes('@');\n  }\n\n  const [registerUser] = useMutation<registerUser_registerUser, registerUserVariables>(registerMutation);\n\n  async function handleSubmit(event: React.FormEvent): Promise<void> {\n    event.preventDefault();\n    setError(undefined);\n    try {\n      const user = await registerUser({\n        variables: {\n          input: {\n            email: email,\n            password: password,\n            firstName: firstName,\n            lastName: lastName,\n          },\n        },\n      });\n      if (user.errors) {\n        setError(user.errors.join(','));\n      }\n      if (user?.data === undefined) {\n        setError('No User data arrived from server.');\n      } else {\n        const newUser: User = {\n          ...user.data,\n        };\n        localStorage.setItem('user', JSON.stringify(newUser));\n        setUser(newUser);\n      }\n    } catch (e) {\n      setError(e.toString());\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {error && (\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n          {error}\n        </MuiAlert>\n      )}\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"firstName\"\n            label=\"First Name\"\n            name=\"firstName\"\n            autoComplete=\"firstName\"\n            autoFocus\n            value={firstName}\n            onChange={(e): void => setFirstName(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"lastName\"\n            label=\"Last Name\"\n            name=\"lastName\"\n            autoComplete=\"lastName\"\n            value={lastName}\n            onChange={(e): void => setLastName(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            value={email}\n            onChange={(e): void => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e): void => setPassword(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={!validateForm()}\n          >\n            Register\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { getUser } from \"../graphql/getUser\";\r\nimport { User } from \"../types/User\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst userQuery = gql`\r\n  query getUser {\r\n    getUser {\r\n      id\r\n      firstName\r\n      lastName\r\n      fullName\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      marginTop: theme.spacing(3),\r\n      width: \"25ch\",\r\n    },\r\n    errorMessage: {\r\n      marginTop: theme.spacing(10),\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nexport function Profile({ user }: { user: User | undefined }) {\r\n  const classes = useStyles();\r\n\r\n  const { loading, error, data } = useQuery<getUser>(userQuery);\r\n\r\n  if (!user) {\r\n    return <Redirect to=\"/login\"></Redirect>;\r\n  }\r\n  if (data?.getUser?.id !== user?.id && user?.role !== \"ADMIN\") {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"md\">\r\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\r\n          You don't have the rights to see this profile.\r\n        </MuiAlert>\r\n      </Container>\r\n    );\r\n  }\r\n  console.log(data);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <div className={classes.root}>\r\n        {error && (\r\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\r\n            {error.message}\r\n          </MuiAlert>\r\n        )}\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <div>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Hello {user?.firstName}!\r\n            </Typography>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              This is your profile page. Here you can edit your information.\r\n            </Typography>\r\n            <TextField\r\n              label=\"First Name\"\r\n              id=\"margin-none\"\r\n              defaultValue={data?.getUser?.firstName}\r\n              className={classes.textField}\r\n            />\r\n            <TextField\r\n              label=\"Last Name\"\r\n              id=\"margin-none\"\r\n              defaultValue={data?.getUser?.lastName}\r\n              className={classes.textField}\r\n            />\r\n            <TextField\r\n              label=\"Full Name\"\r\n              id=\"margin-none\"\r\n              defaultValue={data?.getUser?.fullName}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n        )}\r\n        <CssBaseline />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","/* eslint-disable @typescript-eslint/camelcase */\nimport { Redirect } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useParams } from 'react-router-dom';\nimport { User } from '../types/User';\nimport { useQuery, useMutation } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Container from '@material-ui/core/Container';\nimport {\n  getSchoolInfoVariables,\n  getSchoolInfo,\n  getSchoolInfo_getSchoolInfoForApplication_questions,\n} from '../graphql/getSchoolInfo';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { createApplication, createApplicationVariables } from '../graphql/createApplication';\nimport { GraphQLError } from 'graphql';\nimport Typography from '@material-ui/core/Typography';\n\n// const getUserQuery = gql`\n//   query getUserDetail {\n//     getUser {\n//       id\n//       firstName\n//       lastName\n//       fullName\n//       role\n//     }\n//   }\n// `;\n\ninterface Answer {\n  questionId: number;\n  question: string;\n  answer: string;\n}\n\nconst getSchoolQuery = gql`\n  query getSchoolInfo($schoolId: Int!) {\n    getSchoolInfoForApplication(schoolId: $schoolId) {\n      id\n      acronym\n      name\n      online\n      description\n      questions {\n        id\n        question\n      }\n    }\n  }\n`;\n\nconst createApplicationMutation = gql`\n  mutation createApplication($input: InputCreateSchoolApplication!) {\n    createSchoolApplication(input: $input) {\n      id\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(3),\n      width: '150ch',\n    },\n    submit: {\n      margin: theme.spacing(3, 1, 2),\n    },\n  }),\n);\n\nexport function Application({ user }: { user: User | undefined }) {\n  const { id } = useParams();\n  const classes = useStyles();\n\n  const [formError, setFormError] = useState<string | undefined>(undefined);\n  const [applicationId, setApplicationId] = useState<number | undefined>(undefined);\n  let questions: getSchoolInfo_getSchoolInfoForApplication_questions[] = [];\n\n  const [answers, setAnswers] = useState<Answer[]>([]);\n  const [createApplication] = useMutation<createApplication, createApplicationVariables>(createApplicationMutation);\n\n  function inputValidated(): boolean {\n    return (\n      answers.length > 0 && answers.every((a) => a.answer && a.answer.length > 0) && answers.length === questions.length\n    );\n  }\n\n  async function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    setFormError(undefined);\n    if (!inputValidated()) {\n      setFormError('you have to fill out all questions before you can continue');\n      return;\n    }\n    try {\n      const { data, errors } = await createApplication({\n        variables: {\n          input: {\n            schoolId: Number(id),\n            userId: Number(user?.id),\n            answers: [\n              ...answers.map((a) => {\n                return { ...a };\n              }),\n            ],\n          },\n        },\n      });\n      if (errors) {\n        setFormError(errors.map((e: GraphQLError) => e.message).join(';'));\n      }\n      if (data?.createSchoolApplication?.id) {\n        setApplicationId(data.createSchoolApplication.id);\n      }\n    } catch (err) {\n      setFormError(err.message);\n    }\n  }\n\n  function setAnswer(questionId: number, question: string, answer: string) {\n    setAnswers((answ) => [...answ.filter((a) => a.questionId !== questionId), { questionId, answer, question }]);\n  }\n\n  const { loading, error, data } = useQuery<getSchoolInfo, getSchoolInfoVariables>(getSchoolQuery, {\n    variables: { schoolId: Number(id) },\n  });\n\n  if (data?.getSchoolInfoForApplication?.questions) {\n    questions = data.getSchoolInfoForApplication.questions;\n  }\n\n  if (user === undefined) {\n    return <Redirect to=\"/login\" />;\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <div className={classes.root}>\n        {applicationId && (\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\n            Application with ID {applicationId} was created.\n          </MuiAlert>\n        )}\n        {loading && <CircularProgress />}\n        {error && (\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\n            {error.message}\n          </MuiAlert>\n        )}\n        {formError && (\n          <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\n            {formError}\n          </MuiAlert>\n        )}\n        <Typography component=\"h1\" variant=\"h5\">\n          Application for {data?.getSchoolInfoForApplication?.name} ({data?.getSchoolInfoForApplication?.acronym})\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Start your adventure now!\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          Please fill out all the questions that are necessary for applying.\n        </Typography>\n        {questions && (\n          <form noValidate onSubmit={handleSubmit}>\n            {questions.map((question) => {\n              return (\n                question && (\n                  <div>\n                    <TextField\n                      key={question.id.toString()}\n                      id={question.id.toString()}\n                      label={question.question ?? ''}\n                      multiline\n                      required\n                      fullWidth\n                      value={answers.find((a) => a.questionId === question.id)?.answer}\n                      onChange={(e) => setAnswer(question.id, question.question, e.target.value)}\n                      variant=\"outlined\"\n                      className={classes.textField}\n                    />\n                  </div>\n                )\n              );\n            })}\n\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n              Create Application\n            </Button>\n          </form>\n        )}\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { SchoolList } from './components/SchoolList';\n//use create client\nimport ApolloClient from 'apollo-boost';\n//use create provider\nimport { ApolloProvider } from 'react-apollo';\nimport Navigation from './components/Navigation';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blueGrey } from '@material-ui/core/colors';\nimport { grey } from '@material-ui/core/colors';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { createBrowserHistory } from 'history';\nimport { Profile } from './components/Profile';\nimport { User } from './types/User';\nimport { Application } from './components/Application';\n\n// get the authentication token from local storage if it exists\nconst storageUser = localStorage.getItem('user');\nconst storedUser: User = storageUser === null ? undefined : JSON.parse(storageUser);\nconst token = storedUser?.token;\n\n//Accessing the address for graphql queries\nconst client = new ApolloClient({\n  uri: '/graphql',\n  headers: {\n    token: token,\n  },\n  onError: ({ graphQLErrors, networkError, operation, forward }) => {\n    if (graphQLErrors) {\n      for (const err of graphQLErrors) {\n        // handle errors differently based on its error code\n        switch (err.extensions?.code) {\n          case 'UNAUTHENTICATED':\n            // old token has expired throwing AuthenticationError,\n            // one way to handle is to obtain a new token and\n            // add it to the operation context\n            const headers = operation.getContext().headers;\n            operation.setContext({\n              headers: {\n                ...headers,\n                //getNewToken(),\n              },\n            });\n            localStorage.removeItem('user');\n            // Now, pass the modified operation to the next link\n            // in the chain. This effectively intercepts the old\n            // failed request, and retries it with a new token\n            return forward(operation);\n\n          // handle other errors\n          case 'ANOTHER_ERROR_CODE':\n            break;\n          // ...\n          default:\n            return forward(operation);\n        }\n      }\n    }\n    return forward(operation);\n  },\n});\n\nfunction logout() {\n  client.resetStore();\n}\n\nconst browserHistory = createBrowserHistory();\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n    secondary: grey,\n  },\n});\n\nfunction App() {\n  const storageUser = localStorage.getItem('user');\n  const storedUser: User = storageUser === null ? undefined : JSON.parse(storageUser);\n  const [user, setUser] = useState<User | undefined>(storedUser);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <ApolloProvider client={client}>\n          <Navigation user={user} setUser={setUser} resetStore={logout} />\n          <Switch>\n            <Redirect exact={true} from=\"/\" to=\"/home\"></Redirect>\n            <Route exact={true} path=\"/home\">\n              <SchoolList />\n            </Route>\n            <Route exact={true} path=\"/schools\">\n              <SchoolList />\n            </Route>\n            <Route path=\"/login\" exact>\n              <Login user={user} setUser={setUser} history={browserHistory} />\n            </Route>\n            <Route path=\"/register\" exact>\n              <Register user={user} setUser={setUser} history={browserHistory} />\n            </Route>\n            <Route path=\"/profile\" exact>\n              <Profile user={user} />\n            </Route>\n            <Route path=\"/school/:id/apply\">\n              <Application user={user} />\n            </Route>\n          </Switch>\n        </ApolloProvider>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(\r\n  swUrl: string,\r\n  config: {\r\n    onUpdate: (arg0: ServiceWorkerRegistration) => void;\r\n    onSuccess: (arg0: ServiceWorkerRegistration) => void;\r\n  }\r\n) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: RequestInfo, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl.toString(), config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}