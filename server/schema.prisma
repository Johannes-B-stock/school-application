generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model address {
  city     String?
  country  String?
  id       Int     @default(autoincrement()) @id
  nationId Int?
  phone    String?
  phone2   String?
  state    String?
  street   String?
  userId   Int?
  zip      String?
  nation   nation? @relation(fields: [nationId], references: [id])
  user     user?   @relation(fields: [userId], references: [id])

  @@index([nationId], name: "nationId")
  @@index([userId], name: "userId")
}

model application {
  accepted               Boolean?                 @default(false)
  acceptedDate           DateTime?
  adminNotes             String?
  arrivedDate            DateTime?
  canceledDate           DateTime?
  created                DateTime?                @default(now())
  id                     Int                      @default(autoincrement()) @id
  inReviewDate           DateTime?
  isStaffApplication     Boolean?                 @default(false)
  packetSent             Boolean?                 @default(false)
  postcardSent           Boolean?                 @default(false)
  progress               String?
  retiredDate            DateTime?
  schoolId               Int?
  status                 String?
  submitDate             DateTime?
  transferredFromSchool  Int?
  userId                 Int
  school                 school?                  @relation(fields: [schoolId], references: [id])
  user                   user                     @relation(fields: [userId], references: [id])
  application_admin_note application_admin_note[]
  application_answer     application_answer[]
  application_history    application_history[]
  email                  email[]
  reference              reference[]

  @@index([schoolId], name: "schoolId")
  @@index([userId], name: "userId")
}

model application_admin_note {
  applicationId Int
  author        Int?
  created       DateTime?   @default(now())
  id            Int         @default(autoincrement()) @id
  modified      DateTime?
  note          String?
  application   application @relation(fields: [applicationId], references: [id])
  user          user?       @relation(fields: [author], references: [id])

  @@index([applicationId], name: "applicationId")
  @@index([author], name: "author")
}

model application_answer {
  answer               String?
  applicationId        Int?
  id                   Int                   @default(autoincrement()) @id
  question             String?
  questionId           Int?
  application          application?          @relation(fields: [applicationId], references: [id])
  application_question application_question? @relation(fields: [questionId], references: [id])

  @@index([applicationId], name: "applicationId")
  @@index([questionId], name: "questionId")
}

model application_history {
  action        String?
  applicationId Int
  created       DateTime?   @default(now())
  error         String?
  field         String?
  id            Int         @default(autoincrement()) @id
  statusNum     String?
  value         String?
  application   application @relation(fields: [applicationId], references: [id])

  @@index([applicationId], name: "applicationId")
}

model application_question {
  id                              Int                             @default(autoincrement()) @id
  question                        String?
  questionCollectionId            Int
  application_question_collection application_question_collection @relation(fields: [questionCollectionId], references: [id])
  application_answer              application_answer[]

  @@index([questionCollectionId], name: "questionCollectionId")
}

model application_question_collection {
  description          String?
  id                   Int                    @default(autoincrement()) @id
  name                 String
  type                 String?
  application_question application_question[]
  school               school[]
}

model attachment {
  created       String?
  downloadCount String?
  ext           String?
  file          String?
  height        String?
  id            Int     @default(autoincrement()) @id
  modified      String?
  name          String?
  schoolId      Int?
  size          String?
  teaching      String?
  type          String?
  userId        Int?
  width         String
  school        school? @relation(fields: [schoolId], references: [id])
  user          user?   @relation(fields: [userId], references: [id])

  @@index([schoolId], name: "schoolId")
  @@index([userId], name: "userId")
}

model child {
  birthday String?
  gender   String?
  id       Int     @default(autoincrement()) @id
  name     String?
  parent   Int
  user     user    @relation(fields: [parent], references: [id])

  @@index([parent], name: "parent")
}

model email {
  allStaff      Boolean
  applicationId Int?
  contents      String?
  created       DateTime?    @default(now())
  group         Int?
  id            Int          @default(autoincrement()) @id
  modified      DateTime?
  schoolId      Int?
  sendAt        DateTime?    @default(now())
  sentDate      DateTime?    @default(now())
  subject       String?
  to            String?
  type          String
  application   application? @relation(fields: [applicationId], references: [id])
  school        school?      @relation(fields: [schoolId], references: [id])

  @@index([applicationId], name: "applicationId")
  @@index([schoolId], name: "schoolId")
}

model nation {
  deuVisa                                 Boolean
  deuVisaBefore                           Boolean
  extraQ                                  Int
  id                                      Int        @default(autoincrement()) @id
  iso2                                    String
  iso3                                    String
  nameDeu                                 String?
  nameEn                                  String
  address                                 address[]
  passport_nationTopassport_birthNationId passport[] @relation("nationTopassport_birthNationId")
  passport_nationTopassport_nationId      passport[] @relation("nationTopassport_nationId")
}

model passport {
  authority                             String?
  birthCity                             String?
  birthNationId                         Int?
  expire                                DateTime?
  firstName                             String?
  id                                    Int       @default(autoincrement()) @id
  issue                                 DateTime?
  lastName                              String?
  middleName                            String
  nationId                              Int?
  number                                String?
  userId                                Int?
  nation_nationTopassport_birthNationId nation?   @relation("nationTopassport_birthNationId", fields: [birthNationId], references: [id])
  nation_nationTopassport_nationId      nation?   @relation("nationTopassport_nationId", fields: [nationId], references: [id])
  user                                  user?     @relation(fields: [userId], references: [id])

  @@index([birthNationId], name: "birthNationId")
  @@index([nationId], name: "nationId")
  @@index([userId], name: "userId")
}

model permission {
  created     DateTime? @default(now())
  description String
  id          Int       @default(autoincrement()) @id
  modified    DateTime?
  name        String?
}

model reference {
  ambition          Int
  applicationId     Int
  christian         String
  churchLife        String
  communication     Int
  conflict          String
  created           DateTime?   @default(now())
  email             String
  emailBy           Int
  emailDate         DateTime?   @default(now())
  emotion           Int
  family            String
  forAdventure      Boolean
  formIn            Boolean
  getEquipped       Boolean
  getHelp           Boolean
  hash              String
  howWell           String
  id                Int         @default(autoincrement()) @id
  initiative        Int
  ipAddress         String
  lang              String
  leadership        Int
  modified          DateTime?
  moral             Int
  name              String
  organization      Int
  other             String
  phone             String
  punctual          Int
  received          Int
  receivedDate      DateTime?   @default(now())
  refNum            Int
  relation          String
  reliable          Int
  selfDis           Int
  servanthood       Int
  status            Int
  strengths         String
  support           String
  teachability      Int
  teamwork          Int
  toEscape          Boolean
  toGrow            Boolean
  userGivenRelation String
  weakness          String
  whySchool         String
  application       application @relation(fields: [applicationId], references: [id])

  @@index([applicationId], name: "applicationId")
}

model school {
  accountingName                  String?
  acronym                         String?
  applicationFee                  Float                            @default(0)
  applicationQuestionsId          Int?
  created                         DateTime?                        @default(now())
  currency                        String?
  description                     String?
  endDate                         DateTime?
  foodDayStudent                  Float                            @default(0)
  hashtag                         String?
  id                              Int                              @default(autoincrement()) @id
  miniOutreachEndDate             DateTime?
  miniOutreachFee                 Float                            @default(0)
  miniOutreachStartDate           DateTime?
  modified                        DateTime?
  name                            String?
  online                          Boolean?                         @default(true)
  outreachEndDate                 DateTime?
  outreachFee                     Float                            @default(0)
  outreachStartDate               DateTime?
  schoolEmail                     String?
  schoolFee                       Float                            @default(0)
  secondary                       Boolean?
  startDate                       DateTime?
  travelNotice                    String?
  url                             String?
  application_question_collection application_question_collection? @relation(fields: [applicationQuestionsId], references: [id])
  application                     application[]
  attachment                      attachment[]
  email                           email[]
  staff                           staff[]
  student                         student[]

  @@index([applicationQuestionsId], name: "applicationQuestionsId")
}

model staff {
  admin           Boolean? @default(false)
  currentSchoolId Int?
  id              Int      @default(autoincrement()) @id
  name            String?
  userId          Int?
  school          school?  @relation(fields: [currentSchoolId], references: [id])
  user            user?    @relation(fields: [userId], references: [id])

  @@index([currentSchoolId], name: "currentSchoolId")
  @@index([userId], name: "userId")
}

model student {
  arrived   Boolean?
  canceled  Boolean?
  graduated Boolean?
  id        Int      @default(autoincrement()) @id
  name      String?
  schoolId  Int
  userId    Int?
  school    school   @relation(fields: [schoolId], references: [id])
  user      user?    @relation(fields: [userId], references: [id])

  @@index([schoolId], name: "schoolId")
  @@index([userId], name: "userId")
}

model user {
  avatarSetNum           Int?
  birthday               DateTime?
  created                DateTime?                @default(now())
  email                  String?
  emailActivated         Boolean?                 @default(false)
  firstName              String?
  fullName               String?
  gender                 String?
  id                     Int                      @default(autoincrement()) @id
  ipAddress              String?
  lastLogDate            DateTime?
  lastName               String?
  modified               DateTime?
  password               String?
  role                   Int?                     @default(0)
  address                address[]
  application            application[]
  application_admin_note application_admin_note[]
  attachment             attachment[]
  child                  child[]
  passport               passport[]
  staff                  staff[]
  student                student[]
  user_information       user_information?
}

model user_information {
  children           Int?
  emRelation         String?
  eyeColor           String?
  facebook           String?
  firstLanguage      String?
  glutenAllergy      Boolean   @default(false)
  health             String?
  height             Int?
  id                 Int       @default(autoincrement()) @id
  lactoseAllergy     Boolean   @default(false)
  life               String?
  maritalStatusDate  DateTime?
  marriage           String?
  meds               String?
  modified           DateTime?
  moldAllergy        Boolean   @default(false)
  nativeLanguage     String?
  onMedication       Boolean   @default(false)
  otherFoodAllergy   String?
  otherLanguage      String?
  otherLanguagePro   Int?
  physicalDisability Boolean   @default(false)
  secondLanguage     String?
  secondLanguagePro  Int?
  shots              String?
  spouseName         String?
  talents            String?
  thirdLanguage      String?
  thirdLanguagePro   Int?
  userId             Int       @unique
  website            String?
  youtube            String?
  user               user      @relation(fields: [userId], references: [id])
}