generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = "***"
}

model address {
  city     String?
  country  String?
  id       Int     @default(autoincrement()) @id
  nationId Int?
  phone    String?
  phone2   String?
  state    String?
  street   String?
  userId   Int?
  zip      String?
  nation   nation? @relation(fields: [nationId], references: [id])
  user     user?   @relation(fields: [userId], references: [id])

  @@index([nationId], name: "nation")
  @@index([userId], name: "user")
}

model applicationAdminNote {
  schoolApplicationId Int
  authorId            Int?
  created             DateTime?         @default(now())
  id                  Int               @default(autoincrement()) @id
  modified            DateTime?
  note                String?
  schoolApplication   schoolApplication @relation(fields: [schoolApplicationId], references: [id])
  author              user?             @relation(fields: [authorId], references: [id])

  @@index([schoolApplicationId], name: "application")
  @@index([authorId], name: "author")
}

model applicationAnswer {
  answer              String?
  schoolApplicationId Int?
  staffApplicationId  Int?
  id                  Int                @default(autoincrement()) @id
  question            String?
  schoolApplication   schoolApplication? @relation(fields: [schoolApplicationId], references: [id])
  staffApplication    staffApplication?  @relation(fields: [staffApplicationId], references: [id])

  @@index([schoolApplicationId], name: "schoolApplication")
  @@index([staffApplicationId], name: "staffApplication")
}

model applicationHistory {
  action        String?
  applicationId Int
  created       DateTime?         @default(now())
  error         String?
  field         String?
  id            Int               @default(autoincrement()) @id
  statusNum     String?
  value         String?
  application   schoolApplication @relation(fields: [applicationId], references: [id])

  @@index([applicationId], name: "application")
}

model applicationQuestion {
  id                   Int                           @default(autoincrement()) @id
  question             String?
  questionCollectionId Int
  questionCollection   applicationQuestionCollection @relation(fields: [questionCollectionId], references: [id])

  @@index([questionCollectionId], name: "questionCollection")
}

model applicationQuestionCollection {
  description         String?
  id                  Int                   @default(autoincrement()) @id
  name                String
  type                String?
  applicationQuestion applicationQuestion[]
  school              school[]
}

model attachments {
  created       String?
  downloadCount String?
  ext           String?
  file          String?
  height        String?
  id            Int     @default(autoincrement()) @id
  modified      String?
  name          String?
  schoolId      Int?
  size          String?
  teaching      String?
  type          String?
  userId        Int?
  width         String
  school        school? @relation(fields: [schoolId], references: [id])
  user          user?   @relation(fields: [userId], references: [id])

  @@index([schoolId], name: "school")
  @@index([userId], name: "user")
}

model child {
  birthday String?
  gender   String?
  id       Int     @default(autoincrement()) @id
  name     String?
  user     Int
  parent   user    @relation(fields: [user], references: [id])

  @@index([user], name: "user")
}

model email {
  allStaff          Boolean
  application       Int?
  contents          String?
  created           DateTime?          @default(now())
  group             Int?
  id                Int                @default(autoincrement()) @id
  modified          DateTime?
  schoolId          Int?
  sendAt            DateTime?          @default(now())
  sentDate          DateTime?          @default(now())
  subject           String?
  to                String?
  type              String
  schoolApplication schoolApplication? @relation(fields: [application], references: [id])
  school            school?            @relation(fields: [schoolId], references: [id])

  @@index([application], name: "application")
  @@index([schoolId], name: "school")
}

model nation {
  deuVisa       Boolean
  deuVisaBefore Boolean
  extraQ        Int
  id            Int        @default(autoincrement()) @id
  iso2          String
  iso3          String
  nameDeu       String?
  nameEn        String
  address       address[]
  passport      passport[]
}

model passport {
  authority  String?
  birthCity  String?
  expire     DateTime?
  firstName  String?
  id         Int       @default(autoincrement()) @id
  issue      DateTime?
  lastName   String?
  middleName String
  nationId   Int?
  number     String?
  userId     Int?
  nation     nation?   @relation(fields: [nationId], references: [id])
  user       user?     @relation(fields: [userId], references: [id])

  @@index([nationId], name: "nation")
  @@index([userId], name: "user")
}

model permissions {
  created     DateTime? @default(now())
  description String
  id          Int       @default(autoincrement()) @id
  modified    DateTime?
  name        String?
}

model reference {
  ambition          Int
  application       Int
  christian         String
  churchLife        String
  communication     Int
  conflict          String
  created           DateTime?         @default(now())
  email             String
  emailBy           Int
  emailDate         DateTime?         @default(now())
  emotion           Int
  family            String
  forAdventure      Boolean
  formIn            Boolean
  getEquipped       Boolean
  getHelp           Boolean
  hash              String
  howWell           String
  id                Int               @default(autoincrement()) @id
  initiative        Int
  ipAddress         String
  lang              String
  leadership        Int
  modified          DateTime?
  moral             Int
  name              String
  organization      Int
  other             String
  phone             String
  punctual          Int
  received          Int
  receivedDate      DateTime?         @default(now())
  refNum            Int
  relation          String
  reliable          Int
  selfDis           Int
  servanthood       Int
  status            Int
  strengths         String
  support           String
  teachability      Int
  teamwork          Int
  toEscape          Boolean
  toGrow            Boolean
  userGivenRelation String
  weakness          String
  whySchool         String
  schoolApplication schoolApplication @relation(fields: [application], references: [id])

  @@index([application], name: "application")
}

model school {
  accountingName         String?
  acronym                String?
  applicationFee         Float                          @default(0)
  applicationQuestionsId Int?
  created                DateTime?                      @default(now())
  currency               String?
  description            String?
  endDate                DateTime?
  foodDayStudent         Float                          @default(0)
  hashtag                String?
  id                     Int                            @default(autoincrement()) @id
  miniOutreachEndDate    DateTime?
  miniOutreachFee        Float                          @default(0)
  miniOutreachStartDate  DateTime?
  modified               DateTime?
  name                   String?
  online                 Boolean?                       @default(true)
  outreachEndDate        DateTime?
  outreachFee            Float                          @default(0)
  outreachStartDate      DateTime?
  schoolEmail            String?
  schoolFee              Float                          @default(0)
  secondary              Boolean?
  startDate              DateTime?
  travelNotice           String?
  url                    String?
  applicationQuestions   applicationQuestionCollection? @relation(fields: [applicationQuestionsId], references: [id])
  attachments            attachments[]
  email                  email[]
  schoolApplication      schoolApplication[]
  staff                  staff[]
  student                student[]

  @@index([applicationQuestionsId], name: "applicationQuestions")
}

model schoolApplication {
  accepted              Boolean?               @default(false)
  acceptedDate          DateTime?
  adminNotes            String?
  arrivedDate           DateTime?
  canceledDate          DateTime?
  created               DateTime?              @default(now())
  id                    Int                    @default(autoincrement()) @id
  inReviewDate          DateTime?
  packetSent            Boolean?               @default(false)
  postcardSent          Boolean?               @default(false)
  progress              String?
  retiredDate           DateTime?
  schoolId              Int
  status                String?
  submitDate            DateTime?
  transferredFromSchool Int?
  userId                Int
  school                school                 @relation(fields: [schoolId], references: [id])
  user                  user                   @relation(fields: [userId], references: [id])
  applicationAdminNote  applicationAdminNote[]
  applicationAnswer     applicationAnswer[]
  applicationHistory    applicationHistory[]
  email                 email[]
  reference             reference[]

  @@index([schoolId], name: "school")
  @@index([userId], name: "user")
}

model staff {
  admin    Boolean? @default(false)
  id       Int      @default(autoincrement()) @id
  name     String?
  schoolId Int
  userId   Int?
  school   school   @relation(fields: [schoolId], references: [id])
  user     user?    @relation(fields: [userId], references: [id])

  @@index([schoolId], name: "school")
  @@index([userId], name: "user")
}

model staffApplication {
  accepted          String?
  acceptedDate      DateTime?
  arrivedDate       DateTime?
  canceledDate      DateTime?
  created           DateTime?           @default(now())
  id                Int                 @default(autoincrement()) @id
  inReviewDate      DateTime?
  packetSent        String?
  postcardSent      String?
  progress          String?
  retiredDate       DateTime?
  status            String?
  submitDate        DateTime?
  type              String?
  userId            Int
  user              user                @relation(fields: [userId], references: [id])
  applicationAnswer applicationAnswer[]

  @@index([userId], name: "user")
}

model student {
  arrived   Boolean?
  canceled  Boolean?
  graduated Boolean?
  id        Int      @default(autoincrement()) @id
  name      String?
  schoolId  Int
  userId    Int?
  school    school   @relation(fields: [schoolId], references: [id])
  user      user?    @relation(fields: [userId], references: [id])

  @@index([schoolId], name: "schoolId")
  @@index([userId], name: "userId")
}

model user {
  avatarSetNum         Int?
  birthday             DateTime?
  created              DateTime?              @default(now())
  email                String?
  emailActivated       Boolean?               @default(false)
  firstName            String?
  fullName             String?
  gender               String?
  id                   Int                    @default(autoincrement()) @id
  ipAddress            String?
  lastLogDate          DateTime?
  lastName             String?
  modified             DateTime?
  password             String?
  role                 Int?                   @default(0)
  address              address[]
  applicationAdminNote applicationAdminNote[]
  attachments          attachments[]
  child                child[]
  passport             passport[]
  schoolApplication    schoolApplication[]
  staff                staff[]
  staffApplication     staffApplication[]
  student              student[]
  userInformation      userInformation?
}

model userInformation {
  children           Int?
  emRelation         String?
  emContactId        Int?
  emContact          address?  @relation(fields: [emContactId], references: [id])
  eyeColor           String?
  facebook           String?
  firstLanguage      String?
  glutenAllergy      Boolean   @default(false)
  health             String?
  height             Int?
  id                 Int       @default(autoincrement()) @id
  lactoseAllergy     Boolean   @default(false)
  life               String?
  maritalStatusDate  DateTime?
  marriage           String?
  meds               String?
  modified           DateTime?
  moldAllergy        Boolean   @default(false)
  nativeLanguage     String?
  onMedication       Boolean   @default(false)
  otherFoodAllergy   String?
  otherLanguage      String?
  otherLanguagePro   Int?
  physicalDisability Boolean   @default(false)
  userId             Int       @unique
  secondLanguage     String?
  secondLanguagePro  Int?
  shots              String?
  spouseName         String?
  talents            String?
  thirdLanguage      String?
  thirdLanguagePro   Int?
  website            String?
  youtube            String?
  user               user      @relation(fields: [userId], references: [id])
}